{"version":3,"sources":["../../../../app/src/routes/v1/team.router.js"],"names":["Router","require","logger","TeamModel","TeamSerializer","TeamValidator","TeamService","UserService","router","prefix","TeamRouter","getById","ctx","info","params","id","team","findById","body","serialize","getByUserId","userId","findOne","confirmUser","token","loggedUser","JSON","parse","request","query","data","verifyToken","throw","email","teamId","confirmedUsers","includes","deleteConfirmedUserFromPreviousTeams","users","filter","user","concat","sendManagerConfirmation","managers","locale","save","status","detail","create","container","value","indexOf","managerEmail","getEmailById","map","m","push","name","areas","layers","createdAt","Date","now","sendNotifications","update","newUsers","validUsers","bodyUserEmail","delete","result","remove","_id","ok","statusCode","isAuthenticatedMiddleware","next","get","post","patch","module","exports"],"mappings":"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","sourcesContent":["const Router = require(\"koa-router\");\nconst logger = require(\"logger\");\nconst TeamModel = require(\"models/team.model\");\nconst TeamSerializer = require(\"serializers/team.serializer\");\nconst TeamValidator = require(\"validators/team.validator\");\nconst TeamService = require(\"services/team.service\");\nconst UserService = require(\"services/user.service\");\n\nconst router = new Router({\n  prefix: \"/teams\"\n});\n\nclass TeamRouter {\n  static async getById(ctx) {\n    logger.info(`Getting team with id ${ctx.params.id}`);\n    const team = await TeamModel.findById(ctx.params.id);\n    ctx.body = TeamSerializer.serialize(team);\n  }\n\n  static async getByUserId(ctx) {\n    logger.info(`Getting team for user with id ${ctx.params.userId}`);\n    let team = await TeamModel.findOne({ \"managers.id\": ctx.params.userId });\n    if (!team) {\n      team = await TeamModel.findOne({ \"confirmedUsers.id\": ctx.params.userId });\n    }\n    ctx.body = TeamSerializer.serialize(team);\n  }\n\n  static async confirmUser(ctx) {\n    const { token } = ctx.params;\n    logger.info(\"Confirming user with token\", token);\n    const loggedUser = JSON.parse(ctx.request.query.loggedUser);\n    const userId = loggedUser.id;\n    const data = TeamService.verifyToken(token);\n    if (!userId) ctx.throw(400, \"User missing\");\n    if (data) {\n      const { email, teamId } = data;\n      const team = await TeamModel.findById(teamId);\n      if (team && !team.confirmedUsers.includes(email)) {\n        TeamService.deleteConfirmedUserFromPreviousTeams(userId);\n        team.users = team.users.filter(user => user !== email);\n        team.confirmedUsers = team.confirmedUsers.concat({ id: userId, email });\n        TeamService.sendManagerConfirmation(email, team.managers, ctx.request.body.locale);\n        await team.save();\n      }\n      logger.info(\"saved team\", team);\n      ctx.body = { status: 200, detail: \"User confirmed\" };\n    } else {\n      ctx.throw(400, \"Token not found\");\n    }\n  }\n\n  static async create(ctx) {\n    logger.info(\"Saving team\", ctx.request.body);\n    const includes = (container, value) => container.indexOf(value) >= 0;\n    const { body } = ctx.request;\n    const userId = ctx.request.body.loggedUser.id;\n    const { locale } = body;\n    const managerEmail = await UserService.getEmailById(userId);\n\n    if (typeof body.managers === \"undefined\") body.managers = [];\n    if (\n      !includes(\n        body.managers.map(m => m.id),\n        userId\n      )\n    ) {\n      body.managers.push({ id: userId, email: managerEmail });\n    }\n    if (body.users) {\n      body.users = body.users.filter(user => user !== userId);\n    }\n    const team = await new TeamModel({\n      name: body.name,\n      managers: body.managers,\n      users: body.users,\n      areas: body.areas,\n      layers: body.layers,\n      createdAt: Date.now()\n    }).save();\n    TeamService.sendNotifications(body.users, team, locale);\n    ctx.body = TeamSerializer.serialize(team);\n  }\n\n  static async update(ctx) {\n    logger.info(`Updating team with id ${ctx.params.id}`);\n    const includes = (container, value) => container.indexOf(value) >= 0;\n    const { body } = ctx.request;\n    const userId = body.loggedUser.id;\n    const team = await TeamModel.findById(ctx.params.id);\n    const { locale } = body;\n\n    if (body.name) {\n      team.name = body.name;\n    }\n    if (body.managers) {\n      if (\n        !includes(\n          body.managers.map(m => m.id),\n          userId\n        )\n      ) {\n        const managerEmail = await UserService.getEmailById(userId);\n        body.managers.push({ id: userId, email: managerEmail });\n      }\n      team.managers = body.managers;\n    }\n\n    let newUsers = [];\n    if (body.users) {\n      logger.info(`Users ${body.users}`);\n\n      const validUsers = body.users.filter(user => user !== userId);\n\n      newUsers = validUsers.filter(bodyUserEmail => {\n        return !team.users.includes(bodyUserEmail);\n      });\n\n      logger.info(`New users ${newUsers}`);\n\n      team.users = validUsers;\n    }\n    if (body.confirmedUsers) {\n      logger.info(`Users ${body.confirmedUsers}`);\n      team.confirmedUsers = body.confirmedUsers;\n    }\n    if (body.areas) {\n      logger.info(`Area ${body.areas}`);\n      team.areas = body.areas;\n    }\n    if (body.layers) {\n      logger.info(`Layer ${body.layers}`);\n      team.layers = body.layers;\n    }\n\n    await team.save();\n    TeamService.sendNotifications(newUsers, team, locale);\n    ctx.body = TeamSerializer.serialize(team);\n  }\n\n  static async delete(ctx) {\n    logger.info(`Deleting team with id ${ctx.params.id}`);\n    const result = await TeamModel.remove({ _id: ctx.params.id });\n    if (!result || !result.result || result.result.ok === 0) {\n      ctx.throw(404, \"Team not found\");\n      return;\n    }\n    ctx.body = \"\";\n    ctx.statusCode = 204;\n  }\n}\n\nconst isAuthenticatedMiddleware = async (ctx, next) => {\n  logger.info(`Verifying if user is authenticated`);\n  const { query, body } = ctx.request;\n\n  const user = { ...(query.loggedUser ? JSON.parse(query.loggedUser) : {}), ...body.loggedUser };\n\n  if (!user || !user.id) {\n    ctx.throw(401, \"Unauthorized\");\n    return;\n  }\n  await next();\n};\n\nrouter.get(\"/fail\", ctx => {\n  ctx.throw(500, \"Test Fail\");\n});\nrouter.get(\"/:id\", isAuthenticatedMiddleware, TeamRouter.getById);\nrouter.get(\"/user/:userId\", isAuthenticatedMiddleware, TeamRouter.getByUserId);\nrouter.post(\"/\", isAuthenticatedMiddleware, TeamValidator.create, TeamRouter.create);\nrouter.patch(\"/:id\", isAuthenticatedMiddleware, TeamValidator.update, TeamRouter.update);\nrouter.delete(\"/:id\", isAuthenticatedMiddleware, TeamRouter.delete);\nrouter.get(\"/confirm/:token\", isAuthenticatedMiddleware, TeamRouter.confirmUser);\n\nmodule.exports = router;\n"],"file":"team.router.js"}