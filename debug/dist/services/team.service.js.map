{"version":3,"sources":["../../../app/src/services/team.service.ts"],"names":["TeamService","create","name","loggedUser","layers","id","userId","email","userEmail","team","TeamModel","save","TeamUserRelationService","teamId","role","EUserRole","Administrator","status","EUserStatus","Confirmed","update","findByIdAndUpdate","new","delete","findByIdAndRemove","removeAllUsersOnTeam","findById","findAllInvites","teamUserRelations","findAllInvitesByUserEmail","findAllByTeamUserRelations","findAllByUserId","teams","i","length","teamUser","userRole","push","findAll","Legacy_teamModel","find"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,WAAN,CAAkB;AACG,eAANC,MAAM,CAACC,IAAD,EAAsBC,UAAtB,EAAuCC,MAAvC,EAA8E;AAC/F,UAAM;AAAEC,MAAAA,EAAE,EAAEC,MAAN;AAAcC,MAAAA,KAAK,EAAEC;AAArB,QAAmCL,UAAzC,CAD+F,CAC1C;;AAErD,UAAMM,IAAI,GAAG,MAAM,IAAIC,aAAJ,CAAc;AAAER,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAd,EAAgCO,IAAhC,EAAnB,CAH+F,CAK/F;AACA;;AACA,UAAMC,2BAAwBX,MAAxB,CAA+B;AACnC;AACAY,MAAAA,MAAM,EAAEJ,IAAI,CAACJ,EAFsB;AAGnCC,MAAAA,MAAM,EAAEA,MAH2B;AAInCC,MAAAA,KAAK,EAAEC,SAJ4B;AAKnCM,MAAAA,IAAI,EAAEC,4BAAUC,aALmB;AAMnCC,MAAAA,MAAM,EAAEC,8BAAYC;AANe,KAA/B,CAAN;AASA,WAAOV,IAAP;AACD;;AAEY,SAANW,MAAM,CAACf,EAAD,EAAaH,IAAb,EAAkC;AAC7C,WAAOQ,cAAUW,iBAAV,CACLhB,EADK,EAEL;AACEH,MAAAA;AADF,KAFK,EAKL;AAAEoB,MAAAA,GAAG,EAAE;AAAP,KALK,CAAP;AAOD;;AAEkB,eAANC,MAAM,CAAClB,EAAD,EAA4B;AAC7C,UAAMK,cAAUc,iBAAV,CAA4BnB,EAA5B,CAAN,CAD6C,CAG7C;;AACA,UAAMO,2BAAwBa,oBAAxB,CAA6CpB,EAA7C,CAAN;AACD;;AAEc,SAARqB,QAAQ,CAACrB,EAAD,EAAa;AAC1B,WAAOK,cAAUgB,QAAV,CAAmBrB,EAAnB,CAAP;AACD;;AAE0B,eAAdsB,cAAc,CAACnB,SAAD,EAA2C;AACpE,UAAMoB,iBAAiB,GAAG,MAAMhB,2BAAwBiB,yBAAxB,CAAkDrB,SAAlD,CAAhC;AAEA,WAAO,MAAMR,WAAW,CAAC8B,0BAAZ,CAAuCF,iBAAvC,CAAb;AACD;;AAE2B,eAAfG,eAAe,CAACzB,MAAD,EAAwC;AAClE,UAAMsB,iBAAiB,GAAG,MAAMhB,2BAAwBmB,eAAxB,CAAwCzB,MAAxC,CAAhC;AAEA,WAAO,MAAMN,WAAW,CAAC8B,0BAAZ,CAAuCF,iBAAvC,CAAb;AACD;;AAEsC,eAA1BE,0BAA0B,CAACF,iBAAD,EAAqE;AAC1G,UAAMI,KAAmB,GAAG,EAA5B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,iBAAiB,CAACM,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjD,YAAME,QAAQ,GAAGP,iBAAiB,CAACK,CAAD,CAAlC;AAEA,YAAMxB,IAAI,GAAG,MAAMT,WAAW,CAAC0B,QAAZ,CAAqBS,QAAQ,CAACtB,MAA9B,CAAnB;AAEAJ,MAAAA,IAAI,CAAC2B,QAAL,GAAgBD,QAAQ,CAACrB,IAAzB;AAEAkB,MAAAA,KAAK,CAACK,IAAN,CAAW5B,IAAX;AACD;;AAED,WAAOuB,KAAP;AACD;;AAEmB,eAAPM,OAAO,GAAgC;AAClD,WAAO,MAAMC,qBAAiBC,IAAjB,CAAsB,EAAtB,CAAb;AACD;;AAtEe;;eAyEHxC,W","sourcesContent":["import Legacy_teamModel, { ILegacyTeamModel } from \"models/legacy_team.model\";\nimport TeamModel, { ITeamModel, ITeam } from \"models/team.model\";\nimport { EUserRole, EUserStatus, ITeamUserRelationModel } from \"models/teamUserRelation.model\";\nimport TeamUserRelationService from \"services/teamUserRelation.service\";\n\nclass TeamService {\n  static async create(name: ITeam[\"name\"], loggedUser: any, layers: string[]): Promise<ITeamModel> {\n    const { id: userId, email: userEmail } = loggedUser; // ToDo: loggedUser Type\n\n    const team = await new TeamModel({ name, layers }).save();\n\n    // Create the Team User relation model\n    // The logged-in user will become the \"Administrator\" of the team\n    await TeamUserRelationService.create({\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      teamId: team.id!,\n      userId: userId,\n      email: userEmail,\n      role: EUserRole.Administrator,\n      status: EUserStatus.Confirmed\n    });\n\n    return team;\n  }\n\n  static update(id: string, name: ITeam[\"name\"]) {\n    return TeamModel.findByIdAndUpdate(\n      id,\n      {\n        name\n      },\n      { new: true }\n    );\n  }\n\n  static async delete(id: string): Promise<void> {\n    await TeamModel.findByIdAndRemove(id);\n\n    // Remove all team user relations\n    await TeamUserRelationService.removeAllUsersOnTeam(id);\n  }\n\n  static findById(id: string) {\n    return TeamModel.findById(id);\n  }\n\n  static async findAllInvites(userEmail: string): Promise<ITeamModel[]> {\n    const teamUserRelations = await TeamUserRelationService.findAllInvitesByUserEmail(userEmail);\n\n    return await TeamService.findAllByTeamUserRelations(teamUserRelations);\n  }\n\n  static async findAllByUserId(userId: string): Promise<ITeamModel[]> {\n    const teamUserRelations = await TeamUserRelationService.findAllByUserId(userId);\n\n    return await TeamService.findAllByTeamUserRelations(teamUserRelations);\n  }\n\n  static async findAllByTeamUserRelations(teamUserRelations: ITeamUserRelationModel[]): Promise<ITeamModel[]> {\n    const teams: ITeamModel[] = [];\n    for (let i = 0; i < teamUserRelations.length; i++) {\n      const teamUser = teamUserRelations[i];\n\n      const team = await TeamService.findById(teamUser.teamId);\n\n      team.userRole = teamUser.role;\n\n      teams.push(team);\n    }\n\n    return teams;\n  }\n\n  static async findAll(): Promise<ILegacyTeamModel[]> {\n    return await Legacy_teamModel.find({});\n  }\n}\n\nexport default TeamService;\n"],"file":"team.service.js"}